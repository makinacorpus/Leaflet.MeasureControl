!function(t,o){"function"==typeof define&&define.amd?define(["leaflet"],function(e){t(e,o.toGeoJSON)}):"object"==typeof exports?module.exports=function(e){return void 0===e&&void 0!==o&&(e=require("leaflet")),t(e),e}:void 0!==o&&o.L&&t(o.L)}(function(t){t.Polyline.Measure=t.Draw.Polyline.extend({addHooks:function(){t.Draw.Polyline.prototype.addHooks.call(this),this._map&&(this._map.on("contextmenu",this._onCancel,this),this._map.doubleClickZoom.disable(),this._startShape(),this._tooltip._container.addEventListener("mouseover",function(){map.dragging.disable()}),this._tooltip._container.addEventListener("mouseout",function(){map.dragging.enable()}))},removeHooks:function(){t.Draw.Polyline.prototype.removeHooks.call(this),this._map&&(this._map.off("contextmenu",this._onCancel,this),this._map.doubleClickZoom.enable()),this._container.style.cursor=""},_startShape:function(){this._drawing=!0,this._poly=new t.Polyline([],this.options.shapeOptions),this._poly._onClick=function(){},this._markerGroup.clearLayers(),this._markers=[],this._container.style.cursor="crosshair",t.Browser.touch||this._map.on("mouseup",this._onMouseUp,this),this._mouseMarker.on("mouseout",this._onMouseOut,this).on("mousemove",this._onMouseMove,this).on("mousedown",this._onMouseDown,this).on("mouseup",this._onMouseUp,this).addTo(this._map),this._map.on("mouseup",this._onMouseUp,this).on("mousemove",this._onMouseMove,this).on("zoomlevelschange",this._onZoomEnd,this).on("touchstart",this._onTouch,this),this._updateTooltip()},_finishShape:function(){this._drawing=!1,this._mouseMarker.off("mousedown",this._onMouseDown,this).off("mouseout",this._onMouseOut,this).off("mouseup",this._onMouseUp,this).off("mousemove",this._onMouseMove,this),this._map.off("mouseup",this._onMouseUp,this).off("mousemove",this._onMouseMove,this).off("touchstart",this._onTouch,this).off("click",this._onTouch,this),this._updateTooltip(this._markers[this._markers.length-1].getLatLng()),this._container.style.cursor=""},_removeShape:function(){this._poly&&(this._map.removeLayer(this._poly),delete this._poly,this._markers.splice(0),this._markerGroup.clearLayers())},_onCancel:function(){if(!this._drawing)return this._removeShape(),void this._startShape()},_getTooltipText:function(){var o,e,s=this.options.showLength;return 0===this._markers.length?o={text:t.drawLocal.draw.handlers.polyline.tooltip.start}:(e=s?this._getMeasurementString():"",o=1===this._markers.length?{text:t.drawLocal.draw.handlers.polyline.tooltip.cont,subtext:e}:{text:t.drawLocal.draw.handlers.polyline.tooltip.end,subtext:e}),this._drawing||(o.text=""),o},_onZoomEnd:function(){t.Draw.Polyline.prototype._onZoomEnd.call(this),this._markers[this._markers.length-1]&&this._updateTooltip(this._markers[this._markers.length-1].getLatLng())}}),t.Control.MeasureControl=t.Control.extend({statics:{TITLE:"Measure distances"},options:{position:"topleft",handler:{}},toggle:function(){this.handler.enabled()?this.handler.disable.call(this.handler):this.handler.enable.call(this.handler)},onAdd:function(o){var e=null;return this._container=t.DomUtil.create("div","leaflet-bar"),this.handler=new t.Polyline.Measure(o,this.options.handler),this.handler.on("enabled",function(){this.enabled=!0,t.DomUtil.addClass(this._container,"enabled")},this),this.handler.on("disabled",function(){delete this.enabled,t.DomUtil.removeClass(this._container,"enabled")},this),e=t.DomUtil.create("a","leaflet-control-draw-measure",this._container),e.href="#",e.title=t.Control.MeasureControl.TITLE,t.DomEvent.addListener(e,"click",t.DomEvent.stopPropagation).addListener(e,"click",t.DomEvent.preventDefault).addListener(e,"click",this.toggle,this),this._container}}),t.Map.mergeOptions({measureControl:!1}),t.Map.addInitHook(function(){this.options.measureControl&&(this.measureControl=t.Control.measureControl().addTo(this))}),t.Control.measureControl=function(o){return new t.Control.MeasureControl(o)}},window);