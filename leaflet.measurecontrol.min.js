!function(a,b){"function"==typeof define&&define.amd?define(["leaflet"],function(c){a(c,b.toGeoJSON)}):"object"==typeof exports?module.exports=function(c){return void 0===c&&void 0!==b&&(c=require("leaflet")),a(c),c}:void 0!==b&&b.L&&a(b.L)}(function(a){a.Polyline.Measure=a.Draw.Polyline.extend({addHooks:function(){a.Draw.Polyline.prototype.addHooks.call(this),this._map&&(this._markerGroup=new a.LayerGroup,this._map.addLayer(this._markerGroup),this._markers=[],this._map.on("click",this._onClick,this),this._startShape())},addVertex:function(b){if(a.Draw.Polyline.prototype.addVertex.call(this,b),this.options.segmentsDistance){if(this._prevLatLng)var c=a.latLng(this._prevLatLng).distanceTo(this._currentLatLng);if(this._poly.getLatLngs().length>1){var d=this._getMiddleCoords(this._prevLatLng,this._currentLatLng,c/2);const e=a.GeometryUtil.readableDistance(c,this.options.metric,this.options.feet),f=a.divIcon({className:"leaflet-draw-measure-segment-distance",html:e});a.marker(d,{icon:f}).addTo(this._markerGroup)}this._prevLatLng=this._currentLatLng}},removeHooks:function(){a.Draw.Polyline.prototype.removeHooks.call(this),this._clearHideErrorTimeout(),this._map.off("pointermove",this._onMouseMove,this).off("mousemove",this._onMouseMove,this).off("click",this._onClick,this),this._clearGuides(),this._container.style.cursor="",this._removeShape()},_startShape:function(){this._drawing=!0,this._poly=new a.Polyline([],this.options.shapeOptions),this._tooltip._container.classList.add("measure-class"),this.originalToolTipStyle=Object.assign({},data._tooltip._container.currentStyle||window.getComputedStyle(data._tooltip._container)),this._poly._onClick=function(){},this._container.style.cursor="crosshair",this._updateTooltip(),this._map.on("pointermove",this._onMouseMove,this).on("mousemove",this._onMouseMove,this)},_finishShape:function(){this._drawing=!1,this._cleanUpShape(),this._clearGuides(),this._updateTooltip(),this._map.off("pointermove",this._onMouseMove,this).off("mousemove",this._onMouseMove,this),this._container.style.cursor=""},_removeShape:function(){this._poly&&(this._map.removeLayer(this._poly),delete this._poly,this._markers.splice(0),this._markerGroup.clearLayers())},_onClick:function(){if(!this._drawing)return this._removeShape(),void this._startShape()},_getTooltipText:function(){var b=a.Draw.Polyline.prototype._getTooltipText.call(this);return this._drawing||(b.text=""),b},_getMiddleCoords:function(b,c,d){const e=a.latLng(b).distanceTo(c),f=[c.lat,b.lng],g=a.latLng(b).distanceTo(f),h=Math.sqrt(Math.pow(e,2)-Math.pow(g,2)),i=g/e,j=d*i,k=Math.sqrt(Math.pow(d,2)-Math.pow(j,2));return{lat:j/(g/(c.lat-b.lat))+b.lat,lng:k/(h/(c.lng-b.lng))+b.lng}},_onMouseMove:function(b){a.Draw.Polyline.prototype._onMouseMove.call(this,b);const c=document.querySelector(".measure-class"),d=c.getBoundingClientRect(),e=document.querySelector(".leaflet-container").getBoundingClientRect(),f=e.width+e.left-b.originalEvent.x-d.width,g=Number(this.originalToolTipStyle.marginTop.split("px")[0]),h=b.originalEvent.y-d.height+g,i=e.height+e.top-b.originalEvent.y-d.height,j=h<e.height/2?"top":"bottom";c.style.marginLeft=f<0?f+"px":this.originalToolTipStyle.marginLeft,"top"==j&&(c.style.marginTop=h<0?Math.abs(h)-d.height+g+"px":this.originalToolTipStyle.marginTop),"bottom"==j&&(c.style.marginTop=i<0?i+"px":this.originalToolTipStyle.marginTop)}}),a.Control.MeasureControl=a.Control.extend({statics:{TITLE:"Measure distances"},options:{position:"topleft",handler:{}},toggle:function(){this.handler.enabled()?this.handler.disable.call(this.handler):this.handler.enable.call(this.handler)},onAdd:function(b){var c=null;return this._container=a.DomUtil.create("div","leaflet-bar"),this.handler=new a.Polyline.Measure(b,this.options),this.handler.on("enabled",function(){this.enabled=!0,a.DomUtil.addClass(this._container,"enabled")},this),this.handler.on("disabled",function(){delete this.enabled,a.DomUtil.removeClass(this._container,"enabled")},this),c=a.DomUtil.create("a","leaflet-control-draw-measure",this._container),c.href="#",c.title=a.Control.MeasureControl.TITLE,a.DomEvent.addListener(c,"click",a.DomEvent.stopPropagation).addListener(c,"click",a.DomEvent.preventDefault).addListener(c,"click",this.toggle,this),this._container}}),a.Map.mergeOptions({measureControl:!1}),a.Map.addInitHook(function(){this.options.measureControl&&(this.measureControl=a.Control.measureControl().addTo(this))}),a.Control.measureControl=function(b){return new a.Control.MeasureControl(b)}},window);